# Generated by Django 3.2.12 on 2022-09-29 14:56

from django.db import migrations
import modules.content.blocks.stream
import wagtail.blocks
import wagtail.contrib.table_block.blocks
import wagtail.documents.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtail.snippets.blocks
import wagtailmodelchooser.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('content', '0067_tagpage_body'),
    ]

    operations = [
        migrations.AlterField(
            model_name='articlepage',
            name='additional_content',
            field=wagtail.fields.StreamField([('similar_content', wagtail.blocks.StructBlock([('suggest_by', wagtail.blocks.ChoiceBlock(choices=[('sector', 'Topic'), ('publication_type', 'Content Type'), ('author', 'Author'), ('country', 'Country'), ('section', 'Section'), ('principles', 'Open Ownership Principles')]))])), ('highlight_pages', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(help_text='e.g. “Examples of our work”, or leave empty', required=False)), ('pages', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock(required=True)), ('card_format', wagtail.blocks.ChoiceBlock(choices=[('landscape', 'Landscape'), ('portrait', 'Portrait')]))]), min_num=1))]))], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='articlepage',
            name='body',
            field=wagtail.fields.StreamField([('rich_text', wagtail.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'h5', 'h6', 'bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'])), ('embed', modules.content.blocks.stream.EmbedBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('pull_quote', wagtail.blocks.StructBlock([('quote', wagtail.blocks.TextBlock(required=True))])), ('summary_box', wagtail.blocks.StructBlock([('text', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'], required=True))])), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True))])), ('cta_block_form', wagtail.blocks.StructBlock([('link_type', wagtail.blocks.ChoiceBlock(choices=[('none', 'None'), ('page', 'Page'), ('document', 'Document'), ('url', 'URL')])), ('link_page', wagtail.blocks.PageChooserBlock(label='Linked Page', required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(label='Linked Document', required=False)), ('link_url', wagtail.blocks.CharBlock(label='URL', required=False)), ('link_label', wagtail.blocks.CharBlock(help_text="If blank will display 'Find out more'", required=False))])), ('disclosure', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=True)), ('body', wagtail.blocks.StreamBlock([('rich_text', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'])), ('embed', modules.content.blocks.stream.EmbedBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True))]))], max_num=1))])), ('raw_html', wagtail.blocks.RawHTMLBlock(label='Raw HTML'))], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='articlepage',
            name='highlight_pages',
            field=wagtail.fields.StreamField([('highlight_pages', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(help_text='e.g. “Examples of our work”, or leave empty', required=False)), ('pages', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock(required=True)), ('card_format', wagtail.blocks.ChoiceBlock(choices=[('landscape', 'Landscape'), ('portrait', 'Portrait')]))]), min_num=1))]))], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='blogarticlepage',
            name='additional_content',
            field=wagtail.fields.StreamField([('similar_content', wagtail.blocks.StructBlock([('suggest_by', wagtail.blocks.ChoiceBlock(choices=[('sector', 'Topic'), ('publication_type', 'Content Type'), ('author', 'Author'), ('country', 'Country'), ('section', 'Section'), ('principles', 'Open Ownership Principles')]))])), ('highlight_pages', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(help_text='e.g. “Examples of our work”, or leave empty', required=False)), ('pages', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock(required=True)), ('card_format', wagtail.blocks.ChoiceBlock(choices=[('landscape', 'Landscape'), ('portrait', 'Portrait')]))]), min_num=1))]))], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='blogarticlepage',
            name='body',
            field=wagtail.fields.StreamField([('rich_text', wagtail.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'h5', 'h6', 'bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'])), ('embed', modules.content.blocks.stream.EmbedBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('pull_quote', wagtail.blocks.StructBlock([('quote', wagtail.blocks.TextBlock(required=True))])), ('summary_box', wagtail.blocks.StructBlock([('text', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'], required=True))])), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True))])), ('cta_block_form', wagtail.blocks.StructBlock([('link_type', wagtail.blocks.ChoiceBlock(choices=[('none', 'None'), ('page', 'Page'), ('document', 'Document'), ('url', 'URL')])), ('link_page', wagtail.blocks.PageChooserBlock(label='Linked Page', required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(label='Linked Document', required=False)), ('link_url', wagtail.blocks.CharBlock(label='URL', required=False)), ('link_label', wagtail.blocks.CharBlock(help_text="If blank will display 'Find out more'", required=False))])), ('disclosure', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=True)), ('body', wagtail.blocks.StreamBlock([('rich_text', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'])), ('embed', modules.content.blocks.stream.EmbedBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True))]))], max_num=1))])), ('raw_html', wagtail.blocks.RawHTMLBlock(label='Raw HTML'))], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='glossarypage',
            name='body',
            field=wagtail.fields.StreamField([('rich_text', wagtail.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'h5', 'h6', 'bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'])), ('embed', modules.content.blocks.stream.EmbedBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('pull_quote', wagtail.blocks.StructBlock([('quote', wagtail.blocks.TextBlock(required=True))])), ('summary_box', wagtail.blocks.StructBlock([('text', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'], required=True))])), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True))])), ('cta_block_form', wagtail.blocks.StructBlock([('link_type', wagtail.blocks.ChoiceBlock(choices=[('none', 'None'), ('page', 'Page'), ('document', 'Document'), ('url', 'URL')])), ('link_page', wagtail.blocks.PageChooserBlock(label='Linked Page', required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(label='Linked Document', required=False)), ('link_url', wagtail.blocks.CharBlock(label='URL', required=False)), ('link_label', wagtail.blocks.CharBlock(help_text="If blank will display 'Find out more'", required=False))])), ('disclosure', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=True)), ('body', wagtail.blocks.StreamBlock([('rich_text', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'])), ('embed', modules.content.blocks.stream.EmbedBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True))]))], max_num=1))])), ('raw_html', wagtail.blocks.RawHTMLBlock(label='Raw HTML'))], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='glossarypage',
            name='glossary',
            field=wagtail.fields.StreamField([('glossary_item', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=True)), ('body', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'small', 'link', 'document-link'], required=True))]))], use_json_field=True),
        ),
        migrations.AlterField(
            model_name='homepage',
            name='body',
            field=wagtail.fields.StreamField([('highlight_pages', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(help_text='e.g. “Examples of our work”, or leave empty', required=False)), ('pages', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock(required=True)), ('card_format', wagtail.blocks.ChoiceBlock(choices=[('landscape', 'Landscape'), ('portrait', 'Portrait')]))]), min_num=1))])), ('publication_types', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(help_text='Leave empty to use default: "View by publication type"', required=False)), ('card_format', wagtail.blocks.ChoiceBlock(choices=[('landscape', 'Landscape'), ('portrait', 'Portrait')])), ('types', wagtail.blocks.MultipleChoiceBlock(choices=modules.content.blocks.stream.get_publication_type_choices))], label='Content types')), ('latest_section_content', wagtail.blocks.StructBlock([('section_page', wagtail.blocks.PageChooserBlock(label='Front page of section', page_type=['content.SectionPage'], required=True))])), ('latest_by_publication_type', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(help_text='If blank, will use "Latest"', required=False)), ('publication_type', wagtailmodelchooser.blocks.ModelChooserBlock(required=True, target_model='taxonomy.publicationtype'))], label='Latest by content type')), ('latest_by_topic', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(help_text='If blank, will use "Latest"', required=False)), ('sector', wagtailmodelchooser.blocks.ModelChooserBlock(required=True, target_model='taxonomy.sectortag'))])), ('latest_by_section_tag', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(help_text='If blank, will use "Latest"', required=False)), ('section', wagtailmodelchooser.blocks.ModelChooserBlock(required=True, target_model='taxonomy.sectiontag'))])), ('latest_by_open_ownership_principle', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(help_text='If blank, will use "Latest"', required=False)), ('principle', wagtailmodelchooser.blocks.ModelChooserBlock(required=True, target_model='taxonomy.principletag'))])), ('latest_from_the_blog', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(default='Latest blog posts', required=True)), ('section', wagtailmodelchooser.blocks.ModelChooserBlock(help_text='', required=False, target_model='taxonomy.sectiontag'))])), ('latest_news', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(default='Latest news', required=True)), ('section', wagtailmodelchooser.blocks.ModelChooserBlock(help_text='', required=False, target_model='taxonomy.sectiontag'))])), ('latest_publications', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(default='Latest publications', required=True)), ('section', wagtailmodelchooser.blocks.ModelChooserBlock(help_text='', required=False, target_model='taxonomy.sectiontag'))])), ('latest_content', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(default='Latest', required=True)), ('section', wagtailmodelchooser.blocks.ModelChooserBlock(help_text='', required=False, target_model='taxonomy.sectiontag'))]))], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='jobpage',
            name='additional_content',
            field=wagtail.fields.StreamField([('similar_content', wagtail.blocks.StructBlock([('suggest_by', wagtail.blocks.ChoiceBlock(choices=[('sector', 'Topic'), ('publication_type', 'Content Type'), ('author', 'Author'), ('country', 'Country'), ('section', 'Section'), ('principles', 'Open Ownership Principles')]))])), ('highlight_pages', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(help_text='e.g. “Examples of our work”, or leave empty', required=False)), ('pages', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock(required=True)), ('card_format', wagtail.blocks.ChoiceBlock(choices=[('landscape', 'Landscape'), ('portrait', 'Portrait')]))]), min_num=1))]))], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='jobpage',
            name='body',
            field=wagtail.fields.StreamField([('rich_text', wagtail.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'h5', 'h6', 'bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'])), ('embed', modules.content.blocks.stream.EmbedBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('pull_quote', wagtail.blocks.StructBlock([('quote', wagtail.blocks.TextBlock(required=True))])), ('summary_box', wagtail.blocks.StructBlock([('text', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'], required=True))])), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True))])), ('cta_block_form', wagtail.blocks.StructBlock([('link_type', wagtail.blocks.ChoiceBlock(choices=[('none', 'None'), ('page', 'Page'), ('document', 'Document'), ('url', 'URL')])), ('link_page', wagtail.blocks.PageChooserBlock(label='Linked Page', required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(label='Linked Document', required=False)), ('link_url', wagtail.blocks.CharBlock(label='URL', required=False)), ('link_label', wagtail.blocks.CharBlock(help_text="If blank will display 'Find out more'", required=False))])), ('disclosure', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=True)), ('body', wagtail.blocks.StreamBlock([('rich_text', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'])), ('embed', modules.content.blocks.stream.EmbedBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True))]))], max_num=1))])), ('raw_html', wagtail.blocks.RawHTMLBlock(label='Raw HTML'))], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='newsarticlepage',
            name='additional_content',
            field=wagtail.fields.StreamField([('similar_content', wagtail.blocks.StructBlock([('suggest_by', wagtail.blocks.ChoiceBlock(choices=[('sector', 'Topic'), ('publication_type', 'Content Type'), ('author', 'Author'), ('country', 'Country'), ('section', 'Section'), ('principles', 'Open Ownership Principles')]))])), ('highlight_pages', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(help_text='e.g. “Examples of our work”, or leave empty', required=False)), ('pages', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock(required=True)), ('card_format', wagtail.blocks.ChoiceBlock(choices=[('landscape', 'Landscape'), ('portrait', 'Portrait')]))]), min_num=1))]))], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='newsarticlepage',
            name='body',
            field=wagtail.fields.StreamField([('rich_text', wagtail.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'h5', 'h6', 'bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'])), ('embed', modules.content.blocks.stream.EmbedBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('pull_quote', wagtail.blocks.StructBlock([('quote', wagtail.blocks.TextBlock(required=True))])), ('summary_box', wagtail.blocks.StructBlock([('text', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'], required=True))])), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True))])), ('cta_block_form', wagtail.blocks.StructBlock([('link_type', wagtail.blocks.ChoiceBlock(choices=[('none', 'None'), ('page', 'Page'), ('document', 'Document'), ('url', 'URL')])), ('link_page', wagtail.blocks.PageChooserBlock(label='Linked Page', required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(label='Linked Document', required=False)), ('link_url', wagtail.blocks.CharBlock(label='URL', required=False)), ('link_label', wagtail.blocks.CharBlock(help_text="If blank will display 'Find out more'", required=False))])), ('disclosure', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=True)), ('body', wagtail.blocks.StreamBlock([('rich_text', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'])), ('embed', modules.content.blocks.stream.EmbedBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True))]))], max_num=1))])), ('raw_html', wagtail.blocks.RawHTMLBlock(label='Raw HTML'))], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='publicationfrontpage',
            name='additional_content',
            field=wagtail.fields.StreamField([('similar_content', wagtail.blocks.StructBlock([('suggest_by', wagtail.blocks.ChoiceBlock(choices=[('sector', 'Topic'), ('publication_type', 'Content Type'), ('author', 'Author'), ('country', 'Country'), ('section', 'Section'), ('principles', 'Open Ownership Principles')]))])), ('highlight_pages', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(help_text='e.g. “Examples of our work”, or leave empty', required=False)), ('pages', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock(required=True)), ('card_format', wagtail.blocks.ChoiceBlock(choices=[('landscape', 'Landscape'), ('portrait', 'Portrait')]))]), min_num=1))]))], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='publicationinnerpage',
            name='additional_content',
            field=wagtail.fields.StreamField([('similar_content', wagtail.blocks.StructBlock([('suggest_by', wagtail.blocks.ChoiceBlock(choices=[('sector', 'Topic'), ('publication_type', 'Content Type'), ('author', 'Author'), ('country', 'Country'), ('section', 'Section'), ('principles', 'Open Ownership Principles')]))])), ('highlight_pages', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(help_text='e.g. “Examples of our work”, or leave empty', required=False)), ('pages', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock(required=True)), ('card_format', wagtail.blocks.ChoiceBlock(choices=[('landscape', 'Landscape'), ('portrait', 'Portrait')]))]), min_num=1))]))], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='publicationinnerpage',
            name='body',
            field=wagtail.fields.StreamField([('rich_text', wagtail.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'h5', 'h6', 'bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'])), ('embed', modules.content.blocks.stream.EmbedBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('pull_quote', wagtail.blocks.StructBlock([('quote', wagtail.blocks.TextBlock(required=True))])), ('summary_box', wagtail.blocks.StructBlock([('text', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'], required=True))])), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True))])), ('cta_block_form', wagtail.blocks.StructBlock([('link_type', wagtail.blocks.ChoiceBlock(choices=[('none', 'None'), ('page', 'Page'), ('document', 'Document'), ('url', 'URL')])), ('link_page', wagtail.blocks.PageChooserBlock(label='Linked Page', required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(label='Linked Document', required=False)), ('link_url', wagtail.blocks.CharBlock(label='URL', required=False)), ('link_label', wagtail.blocks.CharBlock(help_text="If blank will display 'Find out more'", required=False))])), ('disclosure', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=True)), ('body', wagtail.blocks.StreamBlock([('rich_text', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'])), ('embed', modules.content.blocks.stream.EmbedBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True))]))], max_num=1))])), ('raw_html', wagtail.blocks.RawHTMLBlock(label='Raw HTML'))], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='sectionpage',
            name='body',
            field=wagtail.fields.StreamField([('highlight_pages', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(help_text='e.g. “Examples of our work”, or leave empty', required=False)), ('pages', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock(required=True)), ('card_format', wagtail.blocks.ChoiceBlock(choices=[('landscape', 'Landscape'), ('portrait', 'Portrait')]))]), min_num=1))])), ('topics_block', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(help_text='Leave empty to use default: "Topics"', required=False)), ('card_format', wagtail.blocks.ChoiceBlock(choices=[('landscape', 'Landscape'), ('portrait', 'Portrait')])), ('tags', wagtail.blocks.ListBlock(wagtail.snippets.blocks.SnippetChooserBlock('taxonomy.SectorTag', required=True), label='Topics', max_num=3, min_num=1))], label='Topics')), ('latest_section_content', wagtail.blocks.StructBlock([('section_page', wagtail.blocks.PageChooserBlock(label='Front page of section', page_type=['content.SectionPage'], required=True))])), ('publication_types', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(help_text='Leave empty to use default: "View by publication type"', required=False)), ('card_format', wagtail.blocks.ChoiceBlock(choices=[('landscape', 'Landscape'), ('portrait', 'Portrait')])), ('types', wagtail.blocks.MultipleChoiceBlock(choices=modules.content.blocks.stream.get_publication_type_choices))], label='Content types')), ('press_links', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(help_text='Leave empty to use default: "Press links"', required=False)), ('section', wagtailmodelchooser.blocks.ModelChooserBlock(help_text='Optional, restrict to press links tagged by section', required=False, target_model='taxonomy.sectiontag')), ('limit_number', wagtail.blocks.IntegerBlock(default=3, required=True))])), ('latest_from_the_blog', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(default='Latest blog posts', required=True)), ('section', wagtailmodelchooser.blocks.ModelChooserBlock(help_text='', required=False, target_model='taxonomy.sectiontag'))])), ('latest_news', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(default='Latest news', required=True)), ('section', wagtailmodelchooser.blocks.ModelChooserBlock(help_text='', required=False, target_model='taxonomy.sectiontag'))])), ('latest_publications', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(default='Latest publications', required=True)), ('section', wagtailmodelchooser.blocks.ModelChooserBlock(help_text='', required=False, target_model='taxonomy.sectiontag'))]))], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='tagpage',
            name='body',
            field=wagtail.fields.StreamField([('rich_text', wagtail.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'h5', 'h6', 'bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'])), ('embed', modules.content.blocks.stream.EmbedBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('pull_quote', wagtail.blocks.StructBlock([('quote', wagtail.blocks.TextBlock(required=True))])), ('summary_box', wagtail.blocks.StructBlock([('text', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'], required=True))])), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True))])), ('cta_block_form', wagtail.blocks.StructBlock([('link_type', wagtail.blocks.ChoiceBlock(choices=[('none', 'None'), ('page', 'Page'), ('document', 'Document'), ('url', 'URL')])), ('link_page', wagtail.blocks.PageChooserBlock(label='Linked Page', required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(label='Linked Document', required=False)), ('link_url', wagtail.blocks.CharBlock(label='URL', required=False)), ('link_label', wagtail.blocks.CharBlock(help_text="If blank will display 'Find out more'", required=False))])), ('disclosure', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=True)), ('body', wagtail.blocks.StreamBlock([('rich_text', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'])), ('embed', modules.content.blocks.stream.EmbedBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True))]))], max_num=1))])), ('raw_html', wagtail.blocks.RawHTMLBlock(label='Raw HTML'))], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='teamprofilepage',
            name='body',
            field=wagtail.fields.StreamField([('rich_text', wagtail.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'h5', 'h6', 'bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'])), ('embed', modules.content.blocks.stream.EmbedBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('pull_quote', wagtail.blocks.StructBlock([('quote', wagtail.blocks.TextBlock(required=True))])), ('summary_box', wagtail.blocks.StructBlock([('text', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'], required=True))])), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True))])), ('cta_block_form', wagtail.blocks.StructBlock([('link_type', wagtail.blocks.ChoiceBlock(choices=[('none', 'None'), ('page', 'Page'), ('document', 'Document'), ('url', 'URL')])), ('link_page', wagtail.blocks.PageChooserBlock(label='Linked Page', required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(label='Linked Document', required=False)), ('link_url', wagtail.blocks.CharBlock(label='URL', required=False)), ('link_label', wagtail.blocks.CharBlock(help_text="If blank will display 'Find out more'", required=False))])), ('disclosure', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=True)), ('body', wagtail.blocks.StreamBlock([('rich_text', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'])), ('embed', modules.content.blocks.stream.EmbedBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True))]))], max_num=1))])), ('raw_html', wagtail.blocks.RawHTMLBlock(label='Raw HTML'))], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='utilitypage',
            name='additional_content',
            field=wagtail.fields.StreamField([('similar_content', wagtail.blocks.StructBlock([('suggest_by', wagtail.blocks.ChoiceBlock(choices=[('sector', 'Topic'), ('publication_type', 'Content Type'), ('author', 'Author'), ('country', 'Country'), ('section', 'Section'), ('principles', 'Open Ownership Principles')]))])), ('highlight_pages', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(help_text='e.g. “Examples of our work”, or leave empty', required=False)), ('pages', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock(required=True)), ('card_format', wagtail.blocks.ChoiceBlock(choices=[('landscape', 'Landscape'), ('portrait', 'Portrait')]))]), min_num=1))]))], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='utilitypage',
            name='body',
            field=wagtail.fields.StreamField([('rich_text', wagtail.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'h5', 'h6', 'bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'])), ('embed', modules.content.blocks.stream.EmbedBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('pull_quote', wagtail.blocks.StructBlock([('quote', wagtail.blocks.TextBlock(required=True))])), ('summary_box', wagtail.blocks.StructBlock([('text', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'], required=True))])), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True))])), ('cta_block_form', wagtail.blocks.StructBlock([('link_type', wagtail.blocks.ChoiceBlock(choices=[('none', 'None'), ('page', 'Page'), ('document', 'Document'), ('url', 'URL')])), ('link_page', wagtail.blocks.PageChooserBlock(label='Linked Page', required=False)), ('link_document', wagtail.documents.blocks.DocumentChooserBlock(label='Linked Document', required=False)), ('link_url', wagtail.blocks.CharBlock(label='URL', required=False)), ('link_label', wagtail.blocks.CharBlock(help_text="If blank will display 'Find out more'", required=False))])), ('disclosure', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=True)), ('body', wagtail.blocks.StreamBlock([('rich_text', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'small', 'ol', 'ul', 'link', 'document-link'])), ('embed', modules.content.blocks.stream.EmbedBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True))]))], max_num=1))])), ('raw_html', wagtail.blocks.RawHTMLBlock(label='Raw HTML'))], blank=True, use_json_field=True),
        ),
    ]
